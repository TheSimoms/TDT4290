/******************************************************************************
* Copyright (c) 2005, 2015  Ericsson AB
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*
* Contributors:
* Gabor Szalai
******************************************************************************/
//
//  File:               WebSocket_Types.ttcn
//  Rev:                R2A
//  Prodnr:             CNL 113 782
//  Reference:          RFC 6455

module WebSocket_Types {

  modulepar boolean m_Websocket_generate_masking_key:=true;
  modulepar boolean m_Websocket_auto_masking:=true;

  external function f_WebSocket_Encode(in WebSocket_PDU pl_pdu,
                       out octetstring pl_data,
                       in boolean pl_gen_maks:=m_Websocket_generate_masking_key,
                       in boolean pl_auto_maks:= m_Websocket_auto_masking);

  external function f_WebSocket_Decode(in octetstring pl_data,
                       out WebSocket_PDU pl_pdu,
                       in boolean pl_auto_maks:= m_Websocket_auto_masking) 
                       return integer;

  external function f_WebSocket_calc_length(in octetstring pl_data)
                       return integer;

  external function f_WebSocket_Generate_Masking_Key() return octetstring;

  type record Websocket_close {
    integer           status_code,
    octetstring       data optional
  };

  type enumerated WebSocket_opcode {Continuation_frame (0), Text_frame (1),
                                    Binary_frame (2), Reserved_non_control3 (3),
                                    Reserved_non_control4 (4),
                                    Reserved_non_control5 (5),
                                    Reserved_non_control6 (6),
                                    Reserved_non_control7 (7),
                                    Connection_Close(8), Ping(9), Pong (10),
                                    Reserved_control11 (11),
                                    Reserved_control12 (12),
                                    Reserved_control13 (13),
                                    Reserved_control14 (14),
                                    Reserved_control15 (15)
                                  };

  type union WebSocket_payloads {
    octetstring       data,
    Websocket_close   close_data
  };
  
  type record WebSocket_PDU {
    bitstring           fin_bit length(1),
    bitstring           rsv1_bit length(1),
    bitstring           rsv2_bit length(1),
    bitstring           rsv3_bit length(1),
    WebSocket_opcode    opcode,
    bitstring           mask_bit length(1),
    integer             payload_len,
    octetstring         masking_key length(4) optional,
    WebSocket_payloads  payload_data optional
  };

}
