/*******************************************************************************
* Copyright Ericsson Telecom AB 2015
*
* XSD to TTCN-3 Translator version: CRL 113 200/5 R3A                       
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*******************************************************************************/
//
//  File:          http_etherx_jabber_org_streams.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Wed Sep 16 13:08:51 2015
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- streams.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://etherx.jabber.org/streams" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module http_etherx_jabber_org_streams {


import from XSD all;


import from jabber_client all;


import from jabber_server all;


import from urn_ietf_params_xml_ns_xmpp_sasl all;


import from urn_ietf_params_xml_ns_xmpp_streams all;


import from urn_ietf_params_xml_ns_xmpp_tls all;


/* namespace prefixes  have to be listed here, else the conv returns error */


type record Stream
{
	XSD.String from_ optional,
	XSD.String id optional,
	XSD.Language lang optional,
	XSD.String to_ optional,
	XSD.Decimal version optional,
	record of XSD.String attr,
	Features features optional,
	XSD.String elem optional,
	XSD.String elem_1 optional,
	record of XSD.String elem_list,
	union {
		record of union {
			jabber_server.Message message_,
			jabber_server.Presence presence,
			jabber_server.Iq iq
		} choice_list,
		record of union {
			jabber_client.Message message_,
			jabber_client.Presence presence,
			jabber_client.Iq iq
		} choice_list_1
	} choice optional,
	Error error_ optional
}
with {
variant "name as uncapitalized";
variant "element";
variant (from_) "name as 'from'";
variant (from_) "attribute";
variant (id) "attribute";
variant (lang) "attribute";
variant (to_) "name as 'to'";
variant (to_) "attribute";
variant (version) "attribute";
variant (attr) "anyAttributes except unqualified, 'http://etherx.jabber.org/streams'";
variant (elem) "anyElement from 'urn:ietf:params:xml:ns:xmpp-tls'";
variant (elem_1) "name as 'elem'";
variant (elem_1) "anyElement from 'urn:ietf:params:xml:ns:xmpp-sasl'";
variant (elem_list) "untagged";
variant (elem_list[-]) "anyElement except unqualified, 'http://etherx.jabber.org/streams'";
variant (choice) "untagged";
variant (choice.choice_list) "untagged";
variant (choice.choice_list[-]) "untagged";
variant (choice.choice_list[-].message_) "name as 'message'";
variant (choice.choice_list[-].message_) "namespace as 'jabber:client' prefix 'client'";
variant (choice.choice_list[-].presence) "namespace as 'jabber:client' prefix 'client'";
variant (choice.choice_list[-].iq) "namespace as 'jabber:client' prefix 'client'";
variant (choice.choice_list_1) "untagged";
variant (choice.choice_list_1[-]) "untagged";
variant (choice.choice_list_1[-].message_) "name as 'message'";
variant (choice.choice_list_1[-].message_) "namespace as 'jabber:server' prefix 'server'";
variant (choice.choice_list_1[-].presence) "namespace as 'jabber:server' prefix 'server'";
variant (choice.choice_list_1[-].iq) "namespace as 'jabber:server' prefix 'server'";
variant (error_) "name as 'error'";
};


type record Features
{
	record of XSD.String elem_list
}
with {
variant "name as uncapitalized";
variant "element";
variant (elem_list) "untagged";
variant (elem_list[-]) "anyElement except unqualified, 'http://etherx.jabber.org/streams'";
};


type record Error
{
	StreamErrorGroup streamErrorGroup,
	urn_ietf_params_xml_ns_xmpp_streams.Text text optional,
	XSD.String elem optional
}
with {
variant "name as uncapitalized";
variant "element";
variant (streamErrorGroup) "namespace as 'urn:ietf:params:xml:ns:xmpp-streams' prefix 'err'";
variant (text) "namespace as 'urn:ietf:params:xml:ns:xmpp-streams' prefix 'err'";
variant (elem) "anyElement except unqualified, 'http://etherx.jabber.org/streams'";
};


}
with {
encode "XML";
variant "namespace as 'http://etherx.jabber.org/streams'";
variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
}
