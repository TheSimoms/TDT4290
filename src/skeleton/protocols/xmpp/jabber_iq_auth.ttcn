/*******************************************************************************
* Copyright Ericsson Telecom AB 2015
*
* XSD to TTCN-3 Translator version: CRL 113 200/5 R3A                       
*
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v1.0
* which accompanies this distribution, and is available at
* http://www.eclipse.org/legal/epl-v10.html
*******************************************************************************/
//
//  File:          jabber_iq_auth.ttcn
//  Description:
//  References:
//  Rev:
//  Prodnr:
//  Updated:       Wed Sep 16 13:08:51 2015
//  Contact:       http://ttcn.ericsson.se
//
////////////////////////////////////////////////////////////////////////////////
//	Generated from file(s):
//	- auth.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "jabber:iq:auth" */
////////////////////////////////////////////////////////////////////////////////
//     Modification header(s):
//-----------------------------------------------------------------------------
//  Modified by:
//  Modification date:
//  Description:
//  Modification contact:
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////


module jabber_iq_auth {


import from XSD all;


/* NOTE WELL: Non-SASL Authentication via the jabber:iq:auth */
/* protocol has been superseded by SASL Authentication as */
/* defined in RFC 3920 and RFC 6120, and is now obsolete. */
/* For historical purposes, the protocol documented by this 
      schema is defined in XEP-0078: 

      http://www.xmpp.org/extensions/xep-0078.html */


type record Query
{
	XSD.String username optional,
	union {
		record length(0 .. 1) of XSD.String password_list,
		record length(1) of XSD.String digest_list
	} choice,
	XSD.String resource optional
}
with {
variant "name as uncapitalized";
variant "element";
variant (choice) "untagged";
variant (choice.password_list) "untagged";
variant (choice.password_list[-]) "name as 'password'";
variant (choice.digest_list) "untagged";
variant (choice.digest_list[-]) "name as 'digest'";
};


}
with {
encode "XML";
variant "namespace as 'jabber:iq:auth'";
variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
variant "elementFormQualified";
}
