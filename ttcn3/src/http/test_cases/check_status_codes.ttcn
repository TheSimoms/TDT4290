/*
//AUTHOR: 
//DATE: 
//VERSION: 
*/
module check_status_codes
// [.objid{ itu_t(0) identified_organization(4) etsi(0)
// identified_organization(127) ericsson(5) testing(0)
// <put further nodes here if needed>}]
{

//=========================================================================
// Import Part
//=========================================================================

import from simple_request all;

//=========================================================================
// Module Parameters
//=========================================================================

// Insert module parameters here if applicable!
// You can use the module_param skeleton!

//=========================================================================
// Data Types
//=========================================================================

// Insert data type defintions here if applicable!
// You can use the data_type skeleton!

//=========================================================================
// Signatures
//=========================================================================

// Insert signature definitions here if applicable!
// You can use the signature skeleton!

//=========================================================================
//Port Types
//=========================================================================

// Insert port type defintions here if applicable!
// You can use the port_type skeleton!

//=========================================================================
//Component Types
//=========================================================================

// Insert component type defintions here if applicable!
// You can use the component_type skeleton!

//=========================================================================
// Constants
//=========================================================================

// Insert constants here if applicable!
// You can use the constant skeleton!

//=========================================================================
// Templates
//=========================================================================

// Insert templates here if applicable!
// You can use the template skeleton!

//=========================================================================
// Altsteps
//=========================================================================

// Insert altsteps here if applicable!
// You can use the altstep skeleton!

//=========================================================================
// Functions
//=========================================================================

// Insert functions here if applicable!
// You can use the function skeleton!

//=========================================================================
// Testcases
//=========================================================================

// Insert test cases here if applicable!
// You can use the test_case skeleton!

//=========================================================================
// Control
//=========================================================================

control
{
  	// Valid GET request. 200
	execute(Simple_HTTP_request_test("GET", "/success/", "", 200, "SUCCESS\n"));
	
	// GET request to non-existing endpoint. 404
	execute(Simple_HTTP_request_test("GET", "/novalidendpoint/", "", 404, "404\n"));
	
	// GET request without trailing slash. 301
	execute(Simple_HTTP_request_test("GET", "/success", "", 301, ""));
	
	// Valid POST request. 201
	execute(Simple_HTTP_request_test("POST", "/api/locations/", "_content_type=application%2Fxml&_content=%3Croot%3E%3Cname%3EFEST%3C%2Fname%3E%3C%2Froot%3E", 201, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><name>FEST</name></root>"));
	
	// Invalid POST request. 400
	execute(Simple_HTTP_request_test("POST", "/api/locations/", "", 400, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><name><list-item>This field is required.</list-item></name></root>"));
	
	// Unauthorized POST request. 403
	execute(Simple_HTTP_request_test("POST", "/api/houses/", "", 403, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><detail>Authentication credentials were not provided.</detail></root>"));
	
	// Authenticate. 200
	execute(Simple_HTTP_request_test("POST", "/api/auth/login/", "username=admin&password=password", 302, ""));
	
	// Authenticated POST request. 200
	execute(Authenticated_request_test(
		"POST", "/api/houses/", "_content_type=application%2Fxml&_content=%3Croot%3E%3Cname%3EHulen%3C%2Fname%3E%3Clocation%3E1%3C%2Flocation%3E%3Cnumber_of_rooms%3E2%3C%2Fnumber_of_rooms%3E%3Ccolor%3Ered%3C%2Fcolor%3E%3C%2Froot%3E",
		201, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><name>Hulen</name><location>1</location><number_of_rooms>2</number_of_rooms><color>red</color><inhabitants></inhabitants></root>",
		"admin", "password"));
		
	// Authenticated PUT request. 200
	execute(Authenticated_request_test(
		"PUT", "/api/houses/1/", "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><id>1</id><name>Grotten</name><location>1</location><number_of_rooms>3</number_of_rooms><color>yellow</color></root>",
		200, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<root><name>Grotten</name><location>1</location><number_of_rooms>3</number_of_rooms><color>yellow</color><inhabitants></inhabitants></root>",
		"admin", "password"));
}

}  // end of module
